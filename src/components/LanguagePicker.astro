---
import { languages } from "@i18n/ui";
import { getLangFromUrl, useTranslatedPath } from "@i18n/utils";
import { fetchAllCountries, loadDataWithFallback } from "@lib/utils";

// Idioma atual da URL
const lang = getLangFromUrl(Astro.url) ?? "";
const translatePath = useTranslatedPath(lang as keyof typeof languages);

// Estado inicial
const fallbackCountries = {};
const allCountries = await loadDataWithFallback(
    () => fetchAllCountries(languages),
    fallbackCountries,
);
---

<div
    transition:persist="languagePicker"
    class="flex items-center md:order-2 space-x-1 md:space-x-0 rtl:space-x-reverse"
>
    <button
        type="button"
        data-dropdown-toggle="language-dropdown-menu"
        class="inline-flex items-center font-medium justify-center px-4 py-2 text-sm rounded-lg cursor-pointer text-white hover:bg-[#B1BAA5]"
    >
        <div id={`flag-${lang}`} class="relative">
            <img
                src={allCountries[lang]?.flag || ""}
                alt={`${allCountries[lang]?.name || "Unknown"} flag`}
                class="w-6 h-5 rounded-full mr-2 transition-transform duration-500 ease-in-out transform scale-100"
            />
        </div>
        {languages[lang].label}
    </button>

    <div
        class="z-50 hidden my-4 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow dark:bg-gray-700"
        id="language-dropdown-menu"
    >
        <ul>
            {
                Object.entries(languages).map(([code, { label }]) => (
                    <li>
                        <a
                            href={translatePath(Astro.url.pathname, code)}
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-600 dark:hover:text-white"
                        >
                            <div class="inline-flex items-center">
                                <img
                                    src={allCountries[code]?.flag || ""}
                                    alt={`${allCountries[code]?.name || "Unknown"} flag`}
                                    class="w-6 h-4 mr-2"
                                />
                                {label}
                            </div>
                        </a>
                    </li>
                ))
            }
        </ul>
    </div>
</div>
